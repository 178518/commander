
require 'commander'

stdin = ''
args = 'init'
init_commander :name => 'Commander', :version => Commander::VERSION, :description => 'Commander utility program.', :argv => args, :stdin => stdin

command :init do |c|
	c.set_syntax 'commander init <filepath>'
	c.set_description 'Initialize an empty file with a commander skeleton.'
	c.add_example 'Apply commander to a file.', 'commander init ./bin/my_executable'
	c.add_option('-r', '--recursive') { puts "I am recursive." } # TODO: pass to block?
	c.when_called do |args|
		 ask_for_list "List:"
		 ask "Continue?"
		 confirm "Sure you want to delete?"
		 
		 p stdin
		 p args
	end
end


=begin

# TODO: should create sub-sub commands like this?
command :create => [:module] do |c|
  
end

=end