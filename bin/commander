
require 'commander'

init_commander :name => 'Commander', 
  :version => Commander::VERSION, 
  :description => 'Commander utility program.'

command :init do 
	set_syntax 'commander init <filepath>'
	set_description 'Initialize an empty file with a commander skeleton.'
	add_example 'Apply commander to a file.', 'commander init ./bin/my_executable'
	add_option('-r', '--recursive') { puts "I am recursive." } # TODO: pass to block?
	when_called do |args|
		 ask_for_list "List:"
		 ask "Continue?"
		 confirm "Sure you want to delete?"
	end
end

command :dummy do 
  set_syntax 'commander dummy'
  set_description 'Just a dummy command.'
  add_example 'test', 'Just a simple test.'
  add_example 'another', 'Just another simple irrelevant test.'
  add_example 'asdf', 'fasdf asdf sdf.'
  when_called do |args|
    say 'Dummy'
  end
end


=begin

# TODO: should create sub-sub commands like this?
command :create => [:module] do |c|
  
end

=end