
require 'commander'

init_commander(
    :name => 'Commander', 
    :version => Commander::VERSION, 
    :description => 'Commander utility program.'
  )

command :init do |c|
	c.syntax = 'commander init <filepath>'
	c.description = 'Initialize an empty file with a commander skeleton.'
	c.example 'Apply commander to a blank file.', 'commander init ./bin/my_executable'
	c.option('-r', '--recursive', 'Do something recursively') { puts "I am recursive." } 
	c.option('-v', '--verbose', 'Do something verbosely') { puts "I am verbose." } 
	c.when_called do |args|
		 ask_for_list "List:"
		 ask "Continue?"
		 confirm "Sure you want to delete?"
	end
end

command :test do |c|
  c.syntax = 'commander test'
  c.when_called do |args|
    p args
  end
end
 
command :hey do |c|
  c.syntax = 'commander hey'
	c.option('-r', '--recursive', 'Do something recursively') { puts "I am recursive." } 
	c.option('-v', '--verbose', 'Do something verbosely') { puts "I am verbose." }
	c.option('--file FILE', 'Something with a file') { |v| puts v }
  c.when_called do |args|
    p args
  end
end