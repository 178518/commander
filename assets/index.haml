!!!
%html
  %head
    %title Commander - Complete solution for Ruby command-line executables
    %link{ :rel => 'stylesheet', :href => 'style.css' }
    %link{ :rel => 'stylesheet', :href => 'lightr.css' }
  %body
    %a{ :href => PROJECT_URL }
      %img#ribbon{ :src => 'http://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png', :alt => 'Fork me on GitHub' }
 
  #container
    #download
      %a{ :href => PROJECT_URL + '/downloads' }
        %img{ :src => 'http://github.com/images/modules/download/zip.png' }
      %a{ :href => PROJECT_URL + '/downloads' }
        %img{ :src => 'http://github.com/images/modules/download/tar.png' }

    = title 'Commander', ''
 
    %p
      The complete solution for Ruby command-line executables. 
      Commander bridges the gap between other terminal related libraries
      you know and love (OptionParser, HighLine), while providing many new
      features, all packed in one simple, elegant API. 

    %h2 Features

    %ul
      %li Easier than baking cookies
      %li Parses options using OptionParser
      %li Auto-populates struct with options ( no more { |v| options[:recursive] = v } )
      %li Auto-generates help documentation via pluggable help formatters
      %li Optional default sub-command when none is present
      %li Global / Sub-command level options
      %li Packaged with two help formatters (Terminal, TerminalCompact)
      %li Imports the highline gem for interacting with the terminal
      %li Adds additional user interaction functionality
      %li Highly customizable progress bar with intuative, simple usage
      %li Multi-word command name support such as 'drupal module install MOD', rather than 'drupal module_install MOD'
      %li Sexy paging for long bodies of text
      %li Growl notification support for MacOS
      %li Sub-command aliasing (very powerful, as both switches and arguments can be used)
      %li Use the 'commander' executable to initialize a commander driven program

    %h2 Example
    %code.highlight= highlight example('example-1.rb')

    %h2 User Interaction
    %code.highlight= highlight example('ui.rb')

    %h2 API Documentation
    %a{ :href => 'doc/index.html' } Click to view 
    the most recent SDoc generated. For a more up-to-date look at what the Commander gem has to offer view the 
    %a{ :href => 'http://github.com/visionmedia/commander/blob/5f88790717e7c0d1cf874370f15af4e1fd08d44e/README.rdoc' } README.

    .footer
      this mini site brought to you by : 
      %a{ :href => project_url('visionmedia', 'mini') } visionmedia/mini